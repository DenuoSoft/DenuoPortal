
import React, { useState, useEffect } from 'react';
import AutocompleteInput from './AutocompleteInput';
import Button from './Button'; // Предположим, что это ваш компонент кнопки

const Form = ({ data }) => {
    const [currentPage, setCurrentPage] = useState(0);
    const [visibleElements, setVisibleElements] = useState(getVisibleElements());
    
    const totalElements = data.length; // Общее количество элементов
    const totalPages = Math.ceil(totalElements / visibleElements); // Общее количество страниц

    function getVisibleElements() {
        const width = window.innerWidth;
        if (width >= 1920) return 8; // Для широких экранов
        if (width >= 1440) return 5; // Для средних экранов
        return 1; // Для маленьких экранов
    }

    useEffect(() => {
        const handleResize = () => {
            setVisibleElements(getVisibleElements());
        };

        window.addEventListener("resize", handleResize);
        return () => window.removeEventListener("resize", handleResize);
    }, []);

    const handleNext = () => {
        if (currentPage < totalPages - 1) {
            setCurrentPage(currentPage + 1);
        }
    };

    const handleBack = () => {
        if (currentPage > 0) {
            setCurrentPage(currentPage - 1);
        }
    };

    const renderItems = () => {
        const startIndex = currentPage * visibleElements;
        const endIndex = startIndex + visibleElements;
        return data.slice(startIndex, endIndex).map((item, index) => (
            <AutocompleteInput key={index} placeholder={item.placeholder} />
        ));
    };

    return (
        <div>
            <form>
                {renderItems()} {/* Отображение элементов на текущей странице */}
                <div>
                    <Button onClick={handleBack} disabled={currentPage === 0}>Back</Button>
                    <Button onClick={handleNext} disabled={currentPage === totalPages - 1}>Next</Button>
                </div>
            </form>
        </div>
    );
};
